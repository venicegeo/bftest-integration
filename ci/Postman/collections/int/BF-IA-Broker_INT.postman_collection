{
	"id": "77782b53-390a-8d4d-d0fd-e561eb00e468",
	"name": "BF-IA-Broker_INT",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "0943520a-562a-f75d-404f-c7d566f25b78",
			"name": "01_Startup",
			"description": "",
			"order": [
				"62c9677b-6451-7e60-7fc1-a7417628713a"
			],
			"owner": "699425"
		},
		{
			"id": "c4e8051a-b8ab-c994-9e91-b080b654b1fa",
			"name": "02_Critical",
			"description": "",
			"order": [
				"b9279bf7-4f6d-c859-47ac-4af124abc8a1",
				"fdf94840-9633-96f6-665a-4236561ccba7",
				"d9e9a953-d936-123d-d4b6-d3bb1ce859ad",
				"d432619f-b560-8692-1a62-df81150a9359",
				"1430da8e-00af-9558-cb6d-262498472f2f",
				"274510be-0942-1a60-2305-79d5b0bfbb9b",
				"de13877c-bea3-fe49-9002-aa8a60f866e8",
				"78249ae2-954c-095a-580b-4c506a0d0130"
			],
			"owner": "699425",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185"
		},
		{
			"id": "85a64caa-2b36-2e9a-5b3d-956c37eeb3bb",
			"name": "04_Low",
			"description": "",
			"order": [
				"4237edea-c7e1-dc16-699f-6841ddd8c58f",
				"718f8682-df4b-1a98-8004-3980008f32aa",
				"d7d73ab9-7944-d722-423c-14326e9c48b2",
				"251fda5c-594e-677b-5483-58d53cce6371",
				"deba58f1-0c86-b32b-ac3e-132863f7121c",
				"ccb62352-9d22-f076-a331-31da71397513"
			],
			"owner": "699425"
		}
	],
	"timestamp": 1486387364384,
	"owner": "699425",
	"public": false,
	"requests": [
		{
			"id": "1430da8e-00af-9558-cb6d-262498472f2f",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/planetscope?PL_API_KEY={{PL API - NO COMMIT}}&maxAcquiredDate={{TwoDaysAgo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\nvar attempt = parseInt(postman.getEnvironmentVariable('retry_loop'));\n\ntests[\"Try: \" + attempt] = true;\nif (testLevels(tests, data, 'features', 'array')) {\n    for (i = 0; i < data.features.length; i++) {\n        if (testLevels(tests, data.features[i], 'properties.sensorName', 'string', 'features[].')) {\n            match = match && !data.features[i].properties.sensorName.match(/rapideye/i);\n        }\n    }\n    if (testLevels(tests, data.features[attempt], 'id', 'skip', 'features[].')) {\n        postman.setEnvironmentVariable('planetscopeId', data.features[attempt].id);\n    }\n}\ntests[\"All returned images are not rapideye\"] = match;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485957739685,
			"name": "Discover Planetscope",
			"description": "Query the catalog for planetscope images.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "c4e8051a-b8ab-c994-9e91-b080b654b1fa"
		},
		{
			"id": "251fda5c-594e-677b-5483-58d53cce6371",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404 (Bug #15689)\"] = responseCode.code === 404;\ntests[\"'Not Found' message\"] = responseBody.match(/no/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485782848436,
			"name": "Get Metadata - Wrong Type",
			"description": "Attempt to retrieve the metadata of a scene using the incorrect type.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "85a64caa-2b36-2e9a-5b3d-956c37eeb3bb"
		},
		{
			"id": "274510be-0942-1a60-2305-79d5b0bfbb9b",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (testLevels(tests, data, 'properties.permissions', 'array') && _.includes(data.properties.permissions,'download') && data.properties.status === \"inactive\") {\n        // Continue if scene is downloadable & inactive.\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    } else if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n        // Otherwise, get another scene.\n        postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n        postman.setNextRequest('Discover Planetscope');\n    } else {\n        // Fail and move on if run out of tries.\n        tests[\"Should find a usable scene\"] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        postman.setNextRequest('Discover Bad Item Type');\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486390206909,
			"name": "Get Planetscope",
			"description": "Get the metadata of a single planetscope image.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": []
		},
		{
			"id": "4237edea-c7e1-dc16-699f-6841ddd8c58f",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\ntests[\"Problem with item type\"] = responseBody.match(/item.*type/i);\ntests[\"'foo' is in reponse\"] = responseBody.match(/foo/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485549069664,
			"name": "Discover Bad Item Type",
			"description": "Attempt to discover using an invalid item type.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "85a64caa-2b36-2e9a-5b3d-956c37eeb3bb"
		},
		{
			"id": "62c9677b-6451-7e60-7fc1-a7417628713a",
			"headers": "Content-Type: application/json\n",
			"url": "https://bf-ia-broker.{{domain}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar d = new Date();\nd.setDate(d.getDate()-2);\nd_string = d.toISOString();\npostman.setEnvironmentVariable('TwoDaysAgo', d.toISOString());\npostman.setEnvironmentVariable('retry_loop', \"0\");\npostman.setEnvironmentVariable('max_retries', 30);\n\ntests[\"globals available\"] = postman.getGlobalVariable('bf_key_1');",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486390138600,
			"name": "Health Check",
			"description": "Check that the app responds at all.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"rawModeData": ""
		},
		{
			"id": "718f8682-df4b-1a98-8004-3980008f32aa",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/rapideye",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\ntests[\"Problem missing planet labs key\"] = responseBody.match(/planet/i) && responseBody.match(/key/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485549129412,
			"name": "Discover No PL Key",
			"description": "Attempt to discover without supplying a PL key.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "85a64caa-2b36-2e9a-5b3d-956c37eeb3bb"
		},
		{
			"id": "78249ae2-954c-095a-580b-4c506a0d0130",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar wait = eval(postman.getEnvironmentVariable('wait'));\nvar data = parseJSON(tests, responseBody);\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (data.properties.status === 'activating') {\n        if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Validate Planetscope Activation');\n            wait(30000);\n        }\n        else {\n            tests[\"Activation finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop', \"0\");\n        }\n    }\n    else if (data.properties.status === 'active') {\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activation finished in time\"] = true;\n        testLevels(tests, data, 'properties.location', 'string');\n    }\n    else {\n        tests[\"status should not be \" + data.properties.status] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486390224603,
			"name": "Validate Planetscope Activation",
			"description": "Check the metadata of a planetscope scene to verify that it was activated.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": []
		},
		{
			"id": "b9279bf7-4f6d-c859-47ac-4af124abc8a1",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/rapideye?PL_API_KEY={{PL API - NO COMMIT}}&maxAcquiredDate={{TwoDaysAgo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\nvar attempt = parseInt(postman.getEnvironmentVariable('retry_loop'));\n\ntests[\"Try: \" + attempt] = true;\nif (testLevels(tests, data, 'features', 'array')) {\n    for (i = 0; i < data.features.length; i++) {\n        if (testLevels(tests, data.features[i], 'properties.sensorName', 'string', 'features[].')) {\n            match = match && data.features[i].properties.sensorName.match(/rapideye/i);\n        }\n    }\n    if (testLevels(tests, data.features[attempt], 'id', 'skip', 'features[0].')) {\n        postman.setEnvironmentVariable('rapideyeId', data.features[attempt].id);\n    }\n}\ntests[\"All returned images are rapideye\"] = match;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485957684669,
			"name": "Discover Rapideye",
			"description": "Query the catalog for rapideye images.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "c4e8051a-b8ab-c994-9e91-b080b654b1fa"
		},
		{
			"id": "ccb62352-9d22-f076-a331-31da71397513",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/rapideye/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 405\"] = responseCode.code === 405",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485783720859,
			"name": "Activate - Invalid Id",
			"description": "Attempt to activate a scene that does not exist.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "85a64caa-2b36-2e9a-5b3d-956c37eeb3bb"
		},
		{
			"id": "d432619f-b560-8692-1a62-df81150a9359",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar wait = eval(postman.getEnvironmentVariable('wait'));\nvar data = parseJSON(tests, responseBody);\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (data.properties.status === 'activating') {\n        if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Validate Rapideye Activation');\n            wait(60000);\n        }\n        else {\n            tests[\"Activation finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop', \"0\");\n        }\n    }\n    else if (data.properties.status === 'active') {\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activation finished in time\"] = true;\n        testLevels(tests, data, 'properties.location', 'string');\n    }\n    else {\n        tests[\"status should not be \" + data.properties.status] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486390178745,
			"name": "Validate Rapideye Activation",
			"description": "Check the metadata of a rapideye scene to verify that it was activated.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": []
		},
		{
			"id": "d7d73ab9-7944-d722-423c-14326e9c48b2",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404 (Bug #15689)\"] = responseCode.code === 404;\ntests[\"'Not Found' message\"] = responseBody.match(/no/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485782762924,
			"name": "Get Metadata - Invalid Id",
			"description": "Attempt to retrieve the metadata of a scene that does not exist.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "85a64caa-2b36-2e9a-5b3d-956c37eeb3bb"
		},
		{
			"id": "d9e9a953-d936-123d-d4b6-d3bb1ce859ad",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485538056406,
			"name": "Activate Rapideye",
			"description": "Activate a rapideye scene.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "c4e8051a-b8ab-c994-9e91-b080b654b1fa"
		},
		{
			"id": "de13877c-bea3-fe49-9002-aa8a60f866e8",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485539379104,
			"name": "Activate Planetscope",
			"description": "Activate a planetscope scene.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "c4e8051a-b8ab-c994-9e91-b080b654b1fa"
		},
		{
			"id": "deba58f1-0c86-b32b-ac3e-132863f7121c",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/foo/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 405\"] = responseCode.code === 405",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485783594484,
			"name": "Activate - Bad Item Type",
			"description": "Attempt to activate a scene, providing a bad item type.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": [],
			"folder": "85a64caa-2b36-2e9a-5b3d-956c37eeb3bb"
		},
		{
			"id": "fdf94840-9633-96f6-665a-4236561ccba7",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\nvar noTest = {};\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (testLevels(noTest, data, 'properties.permissions', 'array') && _.includes(data.properties.permissions,'download') && data.properties.status === \"inactive\") {\n        // Continue if scene is downloadable & inactive.\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    } else if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n        // Otherwise, get another scene.\n        postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n        postman.setNextRequest('Discover Rapideye');\n    } else {\n        // Fial and move on if run out of tries.\n        tests[\"Should find a usable scene\"] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        postman.setNextRequest('Discover Planetscope');\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486390195940,
			"name": "Get Rapideye",
			"description": "Get the metadata of a single rapideye image.",
			"collectionId": "77782b53-390a-8d4d-d0fd-e561eb00e468",
			"responses": []
		}
	]
}