{
	"id": "eafdcb90-a989-c37b-192d-eff5f8558643",
	"name": "BF-IA-Broker_INT",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "654b3cab-9f74-f17a-7688-fb2a3c8e331f",
			"name": "01_Startup",
			"description": "",
			"order": [
				"239511ff-449d-851e-5fff-93961fd9f32d"
			],
			"owner": "699425"
		},
		{
			"id": "519130e4-12ac-04cb-35f7-bb1f4e30e77c",
			"name": "02_Critical",
			"description": "",
			"order": [
				"f4b7ce07-05e2-322b-610e-5b5fff4c8be4",
				"b806312e-ca89-ebe7-e77b-2c9370fbf527",
				"0ee18a86-d14c-5ba6-018c-fb763b1d3bc6",
				"3a5df411-9602-2997-5ecb-fcaeec93abcf",
				"817d9c67-12b0-7059-ec26-a409b14bcae6",
				"3fac4b4a-d4d1-d50b-e353-46445baced88",
				"20790c3e-e483-d837-9f7b-903ad95f9981",
				"f445f46a-cec1-190d-a881-8d0364f00126"
			],
			"owner": "699425",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185"
		},
		{
			"id": "ca633943-dd66-ea22-20c5-5f5d430e12a8",
			"name": "04_Low",
			"description": "",
			"order": [
				"0ff02cad-36db-32cd-eb7c-7120daac558f",
				"58c5bb35-60a4-db28-2743-6c316d40f5c5",
				"e4470868-959e-1408-d422-c9cfb7777f3a",
				"f59edce5-46cb-0022-6510-9ee9045ba796",
				"50a2943b-2a6d-698d-5388-33249bd5bede",
				"8b8b8ae4-1a69-10cd-01df-ef9f9d251532"
			],
			"owner": "699425"
		}
	],
	"timestamp": 1486498613672,
	"owner": "699425",
	"public": false,
	"requests": [
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Activate a rapideye scene.",
			"headers": "",
			"helperAttributes": {},
			"id": "0ee18a86-d14c-5ba6-018c-fb763b1d3bc6",
			"method": "POST",
			"name": "Activate Rapideye",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1485538056406,
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "519130e4-12ac-04cb-35f7-bb1f4e30e77c"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to discover using an invalid item type.",
			"headers": "",
			"helperAttributes": {},
			"id": "0ff02cad-36db-32cd-eb7c-7120daac558f",
			"method": "GET",
			"name": "Discover Bad Item Type",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\ntests[\"Problem with item type\"] = responseBody.match(/item.*type/i);\ntests[\"'foo' is in reponse\"] = responseBody.match(/foo/i);",
			"time": 1485549069664,
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "ca633943-dd66-ea22-20c5-5f5d430e12a8"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Activate a planetscope scene.",
			"headers": "",
			"helperAttributes": {},
			"id": "20790c3e-e483-d837-9f7b-903ad95f9981",
			"method": "POST",
			"name": "Activate Planetscope",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1485539379104,
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "519130e4-12ac-04cb-35f7-bb1f4e30e77c"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": [],
			"dataMode": "raw",
			"description": "Check that the app responds at all.",
			"headers": "Content-Type: application/json\n",
			"helperAttributes": {},
			"id": "239511ff-449d-851e-5fff-93961fd9f32d",
			"method": "GET",
			"name": "Health Check",
			"pathVariables": {},
			"preRequestScript": null,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar d = new Date();\nd.setDate(d.getDate()-2);\nd_string = d.toISOString();\npostman.setEnvironmentVariable('TwoDaysAgo', d.toISOString());\npostman.setEnvironmentVariable('retry_loop', \"0\");\npostman.setEnvironmentVariable('max_retries', 20);\n\ntests[\"globals available\"] = postman.getGlobalVariable('bf_key_1');",
			"time": 1486498566240,
			"url": "https://bf-ia-broker.{{domain}}",
			"folder": "654b3cab-9f74-f17a-7688-fb2a3c8e331f",
			"rawModeData": ""
		},
		{
			"id": "3a5df411-9602-2997-5ecb-fcaeec93abcf",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar wait = eval(postman.getEnvironmentVariable('wait'));\nvar data = parseJSON(tests, responseBody);\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (data.properties.status === 'inactive') {\n        if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Validate Rapideye Activation');\n            wait(5000);\n        }\n        else {\n            tests[\"Activation finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop', \"0\");\n        }\n    }\n    else if (data.properties.status === 'active' || data.properties.status === 'activating') {\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activation finished in time\"] = true;\n    }\n    else {\n        tests[\"status should not be \" + data.properties.status] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486501541285,
			"name": "Validate Rapideye Activation",
			"description": "Check the metadata of a rapideye scene to verify that it was activated.",
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"responses": []
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Get the metadata of a single planetscope image.",
			"headers": "",
			"helperAttributes": {},
			"id": "3fac4b4a-d4d1-d50b-e353-46445baced88",
			"method": "GET",
			"name": "Get Planetscope",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (testLevels(tests, data, 'properties.permissions', 'array') && _.includes(data.properties.permissions,'download') && data.properties.status === \"inactive\") {\n        // Continue if scene is downloadable & inactive.\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    } else {\n        var results = postman.getEnvironmentVariable('planetscopeImages');\n        postman.setEnvironmentVariable('planetscopeId', results.split(',')[0]);\n        postman.setEnvironmentVariable('planetscopeImages', results.replace(/[^,]*,/,''));\n        if (postman.getEnvironmentVariable('planetscopeId') === '') {\n            postman.setNextRequest('Discover Bad Item Type');\n            tests[\"Activatable image found.\"] = false;\n        } else {\n            postman.setNextRequest('Get Planetscope');\n        }\n    }\n}",
			"time": 1486497848567,
			"url": "https://bf-ia-broker.{{domain}}/planet/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "519130e4-12ac-04cb-35f7-bb1f4e30e77c"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to activate a scene, providing a bad item type.",
			"headers": "",
			"helperAttributes": {},
			"id": "50a2943b-2a6d-698d-5388-33249bd5bede",
			"method": "POST",
			"name": "Activate - Bad Item Type",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 405\"] = responseCode.code === 405",
			"time": 1485783594484,
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/foo/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "ca633943-dd66-ea22-20c5-5f5d430e12a8"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to discover without supplying a PL key.",
			"headers": "",
			"helperAttributes": {},
			"id": "58c5bb35-60a4-db28-2743-6c316d40f5c5",
			"method": "GET",
			"name": "Discover No PL Key",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\ntests[\"Problem missing planet labs key\"] = responseBody.match(/planet/i) && responseBody.match(/key/i);",
			"time": 1485549129412,
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/rapideye",
			"version": 2,
			"folder": "ca633943-dd66-ea22-20c5-5f5d430e12a8"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Query the catalog for planetscope images.",
			"headers": "",
			"helperAttributes": {},
			"id": "817d9c67-12b0-7059-ec26-a409b14bcae6",
			"method": "GET",
			"name": "Discover Planetscope",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\nvar results = '';\n\nif (testLevels(tests, data, 'features', 'array')) {\n    for (i = 0; i < data.features.length; i++) {\n        if (testLevels(tests, data.features[i], 'properties.sensorName', 'string', 'features[].')) {\n            match = match && !data.features[i].properties.sensorName.match(/rapideye/i);\n        }\n        if (testLevels(tests, data.features[i], 'id', 'skip', 'features[0].')) {\n            results = data.features[i].id + ',' + results;\n        }\n    }\n}\ntests[\"All returned images are not rapideye\"] = match;\npostman.setEnvironmentVariable('planetscopeId', results.split(',')[0]);\npostman.setEnvironmentVariable('planetscopeImages', results.replace(/[^,]*,/,''));",
			"time": 1486497704815,
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/planetscope?PL_API_KEY={{PL API - NO COMMIT}}&maxAcquiredDate={{TwoDaysAgo}}",
			"version": 2,
			"folder": "519130e4-12ac-04cb-35f7-bb1f4e30e77c"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to activate a scene that does not exist.",
			"headers": "",
			"helperAttributes": {},
			"id": "8b8b8ae4-1a69-10cd-01df-ef9f9d251532",
			"method": "POST",
			"name": "Activate - Invalid Id",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 405\"] = responseCode.code === 405",
			"time": 1485783720859,
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/rapideye/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "ca633943-dd66-ea22-20c5-5f5d430e12a8"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Get the metadata of a single rapideye image.",
			"headers": "",
			"helperAttributes": {},
			"id": "b806312e-ca89-ebe7-e77b-2c9370fbf527",
			"method": "GET",
			"name": "Get Rapideye",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\nvar noTest = {};\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (testLevels(noTest, data, 'properties.permissions', 'array') && _.includes(data.properties.permissions,'download') && data.properties.status === \"inactive\") {\n        // Continue if scene is downloadable & inactive.\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activatable image found.\"] = true;\n    } else {\n        // Fail and move on if run out of tries.\n        var results = postman.getEnvironmentVariable('rapideyeImages');\n        postman.setEnvironmentVariable('rapideyeId', results.split(',')[0]);\n        postman.setEnvironmentVariable('rapideyeImages', results.replace(/[^,]*,/,''));\n        if (postman.getEnvironmentVariable('rapideyeId') === '') {\n            postman.setNextRequest('Discover Planetscope');\n            tests[\"Activatable image found.\"] = false;\n        } else {\n            postman.setNextRequest('Get Rapideye');\n        }\n    }\n}",
			"time": 1486497012007,
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "519130e4-12ac-04cb-35f7-bb1f4e30e77c"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to retrieve the metadata of a scene that does not exist.",
			"headers": "",
			"helperAttributes": {},
			"id": "e4470868-959e-1408-d422-c9cfb7777f3a",
			"method": "GET",
			"name": "Get Metadata - Invalid Id",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 404 (Bug #15689)\"] = responseCode.code === 404;\ntests[\"'Not Found' message\"] = responseBody.match(/no/i);",
			"time": 1485782762924,
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "ca633943-dd66-ea22-20c5-5f5d430e12a8"
		},
		{
			"id": "f445f46a-cec1-190d-a881-8d0364f00126",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar wait = eval(postman.getEnvironmentVariable('wait'));\nvar data = parseJSON(tests, responseBody);\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (data.properties.status === 'inactive') {\n        if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Validate Planetscope Activation');\n            wait(5000);\n        }\n        else {\n            tests[\"Activation finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop', \"0\");\n        }\n    }\n    else if (data.properties.status === 'active' || data.properties.status === 'activating') {\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activation finished in time\"] = true;\n    }\n    else {\n        tests[\"status should not be \" + data.properties.status] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486501536912,
			"name": "Validate Planetscope Activation",
			"description": "Check the metadata of a planetscope scene to verify that it was activated.",
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"responses": []
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Query the catalog for rapideye images.",
			"headers": "",
			"helperAttributes": {},
			"id": "f4b7ce07-05e2-322b-610e-5b5fff4c8be4",
			"method": "GET",
			"name": "Discover Rapideye",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\n\nvar results = '';\n\nif (testLevels(tests, data, 'features', 'array')) {\n    for (i = 0; i < data.features.length; i++) {\n        if (testLevels(tests, data.features[i], 'properties.sensorName', 'string', 'features[].')) {\n            match = match && data.features[i].properties.sensorName.match(/rapideye/i);\n        }\n        if (testLevels(tests, data.features[i], 'id', 'skip', 'features[0].')) {\n            results = data.features[i].id + ',' + results;\n        }\n    }\n}\ntests[\"All returned images are rapideye\"] = match;\npostman.setEnvironmentVariable('rapideyeId', results.split(',')[0]);\npostman.setEnvironmentVariable('rapideyeImages', results.replace(/[^,]*,/,''));",
			"time": 1486496870113,
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/rapideye?PL_API_KEY={{PL API - NO COMMIT}}&maxAcquiredDate={{TwoDaysAgo}}",
			"version": 2,
			"folder": "519130e4-12ac-04cb-35f7-bb1f4e30e77c"
		},
		{
			"collectionId": "eafdcb90-a989-c37b-192d-eff5f8558643",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to retrieve the metadata of a scene using the incorrect type.",
			"headers": "",
			"helperAttributes": {},
			"id": "f59edce5-46cb-0022-6510-9ee9045ba796",
			"method": "GET",
			"name": "Get Metadata - Wrong Type",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 404 (Bug #15689)\"] = responseCode.code === 404;\ntests[\"'Not Found' message\"] = responseBody.match(/no/i);",
			"time": 1485782848436,
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"version": 2,
			"folder": "ca633943-dd66-ea22-20c5-5f5d430e12a8"
		}
	]
}