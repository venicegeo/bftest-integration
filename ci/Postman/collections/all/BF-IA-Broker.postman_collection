{
	"id": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
	"name": "BF-IA-Broker",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "9abd76b8-ff75-8beb-19b8-c007f7dd664b",
			"name": "01_Startup",
			"description": "",
			"order": [
				"4a338048-df1f-c8b3-8feb-9d74f7f42bf1"
			],
			"owner": "699425"
		},
		{
			"id": "5937c74a-0f9a-832b-21cb-f2bb23200e60",
			"name": "02_High",
			"description": "",
			"order": [
				"b1ea70ca-343b-afa2-1bf3-3051d9d6beaa",
				"1696e036-076c-081c-0afb-0062fb145f80",
				"2dbae3d5-a6df-b868-cba1-4b4ccf52606a",
				"cbf453ec-380c-4580-0814-bb945190f4a0",
				"49d603e9-77a7-4b8b-f1d2-a7f15a9739c5",
				"859089d9-0e39-9c8d-7bb5-ed21118cf218",
				"13f8e16b-06bd-4e09-8bd1-5631f807985a",
				"1b650c83-a58a-e16d-01a0-16fe00d03b69"
			],
			"owner": "699425",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185"
		},
		{
			"id": "e4cb4366-936a-2577-7c17-0488b2eb6617",
			"name": "04_Low",
			"description": "",
			"order": [
				"e269db98-af93-0ce5-b540-76cfe1d9d821",
				"1b3f35be-ceef-059a-487d-c3071c4b057e",
				"b425aafe-cd0d-0c5c-08b5-a30446819d9a",
				"d89bba85-a763-94e0-f7a6-10cbdbf1a3c2",
				"617d1c20-164f-e214-9a42-122fe573cf7d",
				"8231726f-044b-1b63-6890-b2a9f9b818bc",
				"a3fbf2e6-c5b9-39ff-9784-88439d05428d",
				"67761895-4ff7-94bb-3367-80d4d3564184"
			],
			"owner": "699425",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185"
		}
	],
	"timestamp": 1485525717055,
	"owner": "699425",
	"public": false,
	"requests": [
		{
			"id": "13f8e16b-06bd-4e09-8bd1-5631f807985a",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485539379104,
			"name": "Activate Planetscope",
			"description": "Activate a planetscope scene.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"id": "1696e036-076c-081c-0afb-0062fb145f80",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\nvar noTest = {};\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (testLevels(noTest, data, 'properties.permissions', 'array') && _.includes(data.properties.permissions,'download') && data.properties.status === \"inactive\") {\n        // Continue if scene is downloadable & inactive.\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activatable image found.\"] = true;\n    } else {\n        // Fail and move on if run out of tries.\n        var results = postman.getEnvironmentVariable('rapideyeImages');\n        postman.setEnvironmentVariable('rapideyeId', results.split(',')[0]);\n        postman.setEnvironmentVariable('rapideyeImages', results.replace(/[^,]*,/,''));\n        if (postman.getEnvironmentVariable('rapideyeId') === '') {\n            postman.setNextRequest('Discover Planetscope');\n            tests[\"Activatable image found.\"] = false;\n        } else {\n            postman.setNextRequest('Get Rapideye');\n        }\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486497012007,
			"name": "Get Rapideye",
			"description": "Get the metadata of a single rapideye image.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"id": "1b3f35be-ceef-059a-487d-c3071c4b057e",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/rapideye",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\ntests[\"Problem missing planet labs key\"] = responseBody.match(/planet/i) && responseBody.match(/key/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485549129412,
			"name": "Discover - No PL Key",
			"description": "Attempt to discover without supplying a PL key.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"id": "1b650c83-a58a-e16d-01a0-16fe00d03b69",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar wait = eval(postman.getEnvironmentVariable('wait'));\nvar data = parseJSON(tests, responseBody);\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (data.properties.status === 'inactive') {\n        if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Validate Planetscope Activation');\n            wait(5000);\n        }\n        else {\n            tests[\"Activation finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop', \"0\");\n        }\n    }\n    else if (data.properties.status === 'active' || data.properties.status === 'activating') {\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activation finished in time\"] = true;\n    }\n    else {\n        tests[\"status should not be \" + data.properties.status] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486501536912,
			"name": "Validate Planetscope Activation",
			"description": "Check the metadata of a planetscope scene to verify that it was activated.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": [],
			"folder": "5937c74a-0f9a-832b-21cb-f2bb23200e60"
		},
		{
			"id": "2dbae3d5-a6df-b868-cba1-4b4ccf52606a",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485538056406,
			"name": "Activate Rapideye",
			"description": "Activate a rapideye scene.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"id": "49d603e9-77a7-4b8b-f1d2-a7f15a9739c5",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/planetscope?PL_API_KEY={{PL API - NO COMMIT}}&maxAcquiredDate={{TwoDaysAgo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\nvar results = '';\n\nif (testLevels(tests, data, 'features', 'array')) {\n    for (i = 0; i < data.features.length; i++) {\n        if (testLevels(tests, data.features[i], 'properties.sensorName', 'string', 'features[].')) {\n            match = match && !data.features[i].properties.sensorName.match(/rapideye/i);\n        }\n        if (testLevels(tests, data.features[i], 'id', 'skip', 'features[0].')) {\n            results = data.features[i].id + ',' + results;\n        }\n    }\n}\ntests[\"All returned images are not rapideye\"] = match;\npostman.setEnvironmentVariable('planetscopeId', results.split(',')[0]);\npostman.setEnvironmentVariable('planetscopeImages', results.replace(/[^,]*,/,''));",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486497704815,
			"name": "Discover Planetscope",
			"description": "Query the catalog for planetscope images.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"id": "4a338048-df1f-c8b3-8feb-9d74f7f42bf1",
			"headers": "Content-Type: application/json\n",
			"url": "https://bf-ia-broker.{{domain}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar d = new Date();\nd.setDate(d.getDate()-2);\nd_string = d.toISOString();\npostman.setEnvironmentVariable('TwoDaysAgo', d.toISOString());\npostman.setEnvironmentVariable('retry_loop', \"0\");\npostman.setEnvironmentVariable('max_retries', 20);\n\ntests[\"globals available\"] = postman.getGlobalVariable('bf_key_1');",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486498566240,
			"name": "Health Check",
			"description": "Check that the app responds at all.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"rawModeData": ""
		},
		{
			"id": "617d1c20-164f-e214-9a42-122fe573cf7d",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404 (Bug #15689)\"] = responseCode.code === 404;\ntests[\"'Not Found' message\"] = responseBody.match(/no/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485782848436,
			"name": "Get Metadata - Wrong Type",
			"description": "Attempt to retrieve the metadata of a scene using the incorrect type.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"id": "67761895-4ff7-94bb-3367-80d4d3564184",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/rapideye/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489598045077,
			"name": "Activate - Invalid Id",
			"description": "Attempt to activate a scene that does not exist.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"collectionRequestId": "1e20a1ba-2131-21c2-7c67-648ce928a155",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to get the metadata of a single rapideye image while using an invalid PL Key",
			"folder": "e4cb4366-936a-2577-7c17-0488b2eb6617",
			"headers": "",
			"helperAttributes": {},
			"id": "8231726f-044b-1b63-6890-b2a9f9b818bc",
			"isFromCollection": true,
			"method": "GET",
			"name": "Get Metadata - Bad PL Key",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 401 (Bug #17842)\"] = responseCode.code === 401;",
			"time": 1489597272704,
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{rapideyeId}}?PL_API_KEY=foo",
			"version": 2
		},
		{
			"id": "859089d9-0e39-9c8d-7bb5-ed21118cf218",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/planetscope/{{planetscopeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (testLevels(tests, data, 'properties.permissions', 'array') && _.includes(data.properties.permissions,'download') && data.properties.status === \"inactive\") {\n        // Continue if scene is downloadable & inactive.\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    } else {\n        var results = postman.getEnvironmentVariable('planetscopeImages');\n        postman.setEnvironmentVariable('planetscopeId', results.split(',')[0]);\n        postman.setEnvironmentVariable('planetscopeImages', results.replace(/[^,]*,/,''));\n        if (postman.getEnvironmentVariable('planetscopeId') === '') {\n            postman.setNextRequest('Discover Bad Item Type');\n            tests[\"Activatable image found.\"] = false;\n        } else {\n            postman.setNextRequest('Get Planetscope');\n        }\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486497848567,
			"name": "Get Planetscope",
			"description": "Get the metadata of a single planetscope image.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"collectionRequestId": "75abb7c5-733b-206b-cf4b-efd06def807c",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to discover supplying a bad PL key.",
			"folder": "e4cb4366-936a-2577-7c17-0488b2eb6617",
			"headers": "",
			"helperAttributes": {},
			"id": "a3fbf2e6-c5b9-39ff-9784-88439d05428d",
			"isFromCollection": true,
			"method": "POST",
			"name": "Activate - Bad PL Key",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 401 (Bug #17842)\"] = responseCode.code === 401;",
			"time": 1489597279259,
			"url": "https://bf-ia-broker.{{domain}}/planet/activate/rapideye/20170310_023105_5125803_RapidEye-3?PL_API_KEY=foo",
			"version": 2
		},
		{
			"id": "b1ea70ca-343b-afa2-1bf3-3051d9d6beaa",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/rapideye?PL_API_KEY={{PL API - NO COMMIT}}&maxAcquiredDate={{TwoDaysAgo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar data = parseJSON(tests, responseBody);\nvar match = true;\n\nvar results = '';\n\nif (testLevels(tests, data, 'features', 'array')) {\n    for (i = 0; i < data.features.length; i++) {\n        if (testLevels(tests, data.features[i], 'properties.sensorName', 'string', 'features[].')) {\n            match = match && data.features[i].properties.sensorName.match(/rapideye/i);\n        }\n        if (testLevels(tests, data.features[i], 'id', 'skip', 'features[0].')) {\n            results = data.features[i].id + ',' + results;\n        }\n    }\n}\ntests[\"All returned images are rapideye\"] = match;\npostman.setEnvironmentVariable('rapideyeId', results.split(',')[0]);\npostman.setEnvironmentVariable('rapideyeImages', results.replace(/[^,]*,/,''));",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486496870113,
			"name": "Discover Rapideye",
			"description": "Query the catalog for rapideye images.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"collectionRequestId": "378b5419-9f4e-c4bf-af92-4912d2da4271",
			"currentHelper": "normal",
			"data": null,
			"dataMode": "params",
			"description": "Attempt to discover supplying a bad PL key.",
			"folder": "e4cb4366-936a-2577-7c17-0488b2eb6617",
			"headers": "",
			"helperAttributes": {},
			"id": "b425aafe-cd0d-0c5c-08b5-a30446819d9a",
			"isFromCollection": true,
			"method": "GET",
			"name": "Discover - Bad PL Key",
			"pathVariables": {},
			"preRequestScript": null,
			"responses": [],
			"tests": "tests[\"Status code is 401 (Bug #17842)\"] = responseCode.code === 401;",
			"time": 1489597264291,
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/rapideye?PL_API_KEY=foo",
			"version": 2
		},
		{
			"id": "cbf453ec-380c-4580-0814-bb945190f4a0",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/{{rapideyeId}}?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar parseJSON = eval(postman.getEnvironmentVariable('parseJSON'));\nvar wait = eval(postman.getEnvironmentVariable('wait'));\nvar data = parseJSON(tests, responseBody);\n\nif (testLevels(tests, data, 'properties.status')) {\n    if (data.properties.status === 'inactive') {\n        if (parseInt(postman.getEnvironmentVariable('retry_loop')) < parseInt(postman.getEnvironmentVariable('max_retries'))) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Validate Rapideye Activation');\n            wait(5000);\n        }\n        else {\n            tests[\"Activation finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop', \"0\");\n        }\n    }\n    else if (data.properties.status === 'active' || data.properties.status === 'activating') {\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n        tests[\"Activation finished in time\"] = true;\n    }\n    else {\n        tests[\"status should not be \" + data.properties.status] = false;\n        postman.setEnvironmentVariable('retry_loop', \"0\");\n    }\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1486501541285,
			"name": "Validate Rapideye Activation",
			"description": "Check the metadata of a rapideye scene to verify that it was activated.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": [],
			"folder": "5937c74a-0f9a-832b-21cb-f2bb23200e60"
		},
		{
			"id": "d89bba85-a763-94e0-f7a6-10cbdbf1a3c2",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/rapideye/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 404 (Bug #15689)\"] = responseCode.code === 404;\ntests[\"'Not Found' message\"] = responseBody.match(/no/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485782762924,
			"name": "Get Metadata - Invalid Id",
			"description": "Attempt to retrieve the metadata of a scene that does not exist.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		},
		{
			"id": "e269db98-af93-0ce5-b540-76cfe1d9d821",
			"headers": "",
			"url": "https://bf-ia-broker.{{domain}}/planet/discover/foo?PL_API_KEY={{PL API - NO COMMIT}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\ntests[\"Problem with item type\"] = responseBody.match(/item.*type/i);\ntests[\"'foo' is in reponse\"] = responseBody.match(/foo/i);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485549069664,
			"name": "Discover - Bad Item Type",
			"description": "Attempt to discover using an invalid item type.",
			"collectionId": "6bfb0361-8e6a-a8e1-f7f8-952d36521185",
			"responses": []
		}
	]
}