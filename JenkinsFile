node {
  def root = pwd()
  def nodejs = tool 'NodeJS_6'

  stage('Clean') {
    deleteDir()
  }

  stage('Setup') {
    git([
      url: "https://github.com/venicegeo/bftest-integration",
      poll: true,
      branch: "master"
    ])
  }

  stage('Sync with GitLab') {
    withCredentials([file(credentialsId: 'pztest-integration-key', variable: 'GIT_KEY')]) {
      sh """
        export HOME=\$(pwd)

        # We need to use our own write-access key for this push to gitlab.
        eval "\$(ssh-agent -s)"
        if [ ! -f \$HOME/.ssh/config ]; then
          mkdir -p \$HOME/.ssh
          touch \$HOME/.ssh/config
        fi
        [ -f "\$GIT_KEY" ] && ssh-add "\$GIT_KEY"
        chmod 600 \$HOME/.ssh/config
        cat <<- EOF > \$HOME/.ssh/config
Host gitlab.devops.geointservices.io
  HostName gitlab.devops.geointservices.io
  User git
  IdentityFile \$GIT_KEY
  IdentitiesOnly yes
EOF
        chmod 400 \$HOME/.ssh/config

        git remote add gitlab git@gitlab.devops.geointservices.io:venicegeo/bftest-integration-source.git
        git push gitlab master
      """
    }
  }

  stage('Test') {
    withCredentials([file(credentialsId: "${POSTMAN_SECRET_FILE}", variable: 'POSTMAN_FILE')]) {
      withEnv(["PATH+=${root}/node_modules/newman/bin:${nodejs}/bin", "PCF_SPACE=test", "HOME=${root}"]) {
        sh "npm install newman@2"
       // sh "ci/beachfront.sh"
      }
    }
  }

  stage ('Cleanup') {
    deleteDir()
  }
}
